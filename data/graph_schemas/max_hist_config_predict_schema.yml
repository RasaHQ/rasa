nodes:
  domain_provider:
    needs: {}
    uses: rasa.graph_components.providers.domain_provider.DomainProvider
    constructor_name: load
    fn: provide_inference
    config: {}
    eager: true
    is_target: false
    is_input: false
    resource:
      name: domain_provider
  story_graph_provider:
    needs: { }
    uses: rasa.graph_components.providers.story_graph_provider.StoryGraphProvider
    constructor_name: load
    fn: provide_inference
    config: { }
    eager: true
    is_target: false
    is_input: false
    resource:
      name: story_graph_provider
  flows_provider:
    needs: { }
    uses: rasa.graph_components.providers.flows_provider.FlowsProvider
    constructor_name: load
    fn: provide_inference
    config: { }
    eager: true
    is_target: false
    is_input: false
    resource:
      name: flows_provider
  command_processor:
    needs:
      tracker: __tracker__
      flows: flows_provider
      story_graph: story_graph_provider
    uses: rasa.dialogue_understanding.processor.command_processor_component.CommandProcessorComponent
    constructor_name: load
    fn: execute_commands
    config: { }
    eager: true
    is_target: false
    is_input: false
    resource: 
      name: command_processor
  run_MemoizationPolicy0:
    needs:
      domain: domain_provider
      rule_only_data: rule_only_data_provider
      tracker: __tracker__
    uses: rasa.core.policies.memoization.MemoizationPolicy
    constructor_name: load
    fn: predict_action_probabilities
    config:
      max_history: 5
    eager: true
    is_target: false
    is_input: false
    resource:
      name: train_MemoizationPolicy0
  run_RulePolicy1:
    needs:
      domain: domain_provider
      rule_only_data: rule_only_data_provider
      tracker: __tracker__
    uses: rasa.core.policies.rule_policy.RulePolicy
    constructor_name: load
    fn: predict_action_probabilities
    config: {}
    eager: true
    is_target: false
    is_input: false
    resource:
      name: train_RulePolicy1
  run_TEDPolicy2:
    needs:
      domain: domain_provider
      rule_only_data: rule_only_data_provider
      tracker: __tracker__
    uses: rasa.core.policies.ted_policy.TEDPolicy
    constructor_name: load
    fn: predict_action_probabilities
    config:
      max_history: 5
    eager: true
    is_target: false
    is_input: false
    resource:
      name: train_TEDPolicy2
  rule_only_data_provider:
    needs: {}
    uses: rasa.graph_components.providers.rule_only_provider.RuleOnlyDataProvider
    constructor_name: load
    fn: provide
    config: {}
    eager: true
    is_target: false
    is_input: false
    resource:
      name: train_RulePolicy1
  select_prediction:
    needs:
      policy0: run_MemoizationPolicy0
      policy1: run_RulePolicy1
      policy2: run_TEDPolicy2
      domain: domain_provider
      tracker: __tracker__
    uses: rasa.core.policies.ensemble.DefaultPolicyPredictionEnsemble
    constructor_name: load
    fn: combine_predictions_from_kwargs
    config: {}
    eager: true
    is_target: false
    is_input: false
    resource: null
  nlu_message_converter:
    needs:
      messages: __message__
    uses: rasa.graph_components.converters.nlu_message_converter.NLUMessageConverter
    constructor_name: load
    fn: convert_user_message
    config: {}
    eager: true
    is_target: false
    is_input: false
    resource: null
  run_RegexMessageHandler:
    needs:
      messages: nlu_message_converter
      domain: domain_provider
    uses: rasa.nlu.classifiers.regex_message_handler.RegexMessageHandler
    constructor_name: load
    fn: process
    config: {}
    eager: true
    is_target: false
    is_input: false
    resource: null
