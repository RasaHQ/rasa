[build-system]
requires = [ "poetry-core>=1.0.4",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "rasa-pro"
version = "3.10.12"
description = "State-of-the-art open-core Conversational AI framework for Enterprises that natively leverages generative AI for effortless assistant development."
authors = [ "Rasa Technologies GmbH <hi@rasa.com>",]
maintainers = [ "Tom Bocklisch <tom@rasa.com>",]
homepage = "https://rasa.com"
repository = "https://github.com/rasahq/rasa"
documentation = "https://rasa.com/docs"
classifiers = [ "Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Topic :: Software Development :: Libraries",]
keywords = [ "nlp", "machine-learning", "machine-learning-library", "bot", "bots", "botkit", "rasa conversational-agents", "conversational-ai", "chatbot", "chatbot-framework", "bot-framework",]
include = [ "LICENSE.txt", "README.md", "rasa/shared/core/training_data/visualization.html", "rasa/cli/default_config.yml", "rasa/shared/importers/*", "rasa/utils/schemas/*", "rasa/keys", "rasa/dialogue_understanding/classifiers/command_prompt_template.jinja2",]
readme = "README.md"
[[tool.poetry.packages]]
include = "rasa"

[[tool.poetry.source]]
name = "internal repository mirroring psycopg binary for macos"
url = "https://europe-west3-python.pkg.dev/rasa-releases/psycopg-binary/simple/"
priority = "supplemental"

[tool.towncrier]
name = "Rasa Pro"
package = "rasa"
package_dir = "rasa"
filename = "CHANGELOG.md"
directory = "./changelog"
underlines = "   "
title_format = "## [{version}] - {project_date}"
template = "./changelog/_template.md.jinja2"
start_string = "<!-- TOWNCRIER -->\n"
issue_format = "[#{issue}](https://github.com/rasahq/rasa-private/issues/{issue})"
[[tool.towncrier.type]]
directory = "removal"
name = "Deprecations and Removals"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "improvement"
name = "Improvements"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous internal changes"
showcontent = false

[tool.mypy]
mypy_path = "./stubs"
ignore_missing_imports = true
namespace_packages = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = false
disable_error_code = [ "arg-type",]

[tool.bandit]
skips = [ "B104", "B301",]

[tool.ruff]
line-length = 88
target-version = "py39"
exclude = [ "eggs", ".git", ".pytest_cache", "build", "dist",]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
boto3 = "~1.35.5"
google-cloud-storage = "^2.14.0"
azure-storage-blob = ">=12.16.0, <12.17.0"
requests = "~2.31.0"
matplotlib = ">=3.7,<3.8"
attrs = ">=23.1,<23.2"
jsonpickle = ">=3.0,<3.1"
redis = ">=4.6.0, <6.0"
absl-py = ">=2.0,<2.1"
apscheduler = ">=3.10,<3.11"
tqdm = "^4.66.2"
networkx = ">=3.1,<3.2"
fbmessenger = "~6.0.0"
pykwalify = ">=1.8,<1.9"
coloredlogs = ">=15,<16"
"ruamel.yaml" = ">=0.17.21,<0.17.22"
pyyaml = ">=6.0"
twilio = ">=8.4,<8.5"
webexteamssdk = ">=1.6.1,<1.7.0"
mattermostwrapper = "~2.2"
rocketchat_API = ">=1.30.0,<1.31.0"
colorhash = ">=2.0,<2.1.0"
jsonschema = ">=4.22"
packaging = "~23.2"
pytz = ">=2022.7.1,<2023.0"
colorclass = "~2.2"
terminaltables = "~3.1.10"
sanic = "~22.12"
sanic-cors = "~2.2.0"
sanic-jwt = "^1.8.0"
sanic-routing = "^22.8.0"
websockets = ">=10.4,<11.0"
aiohttp = ">=3.9.4,<3.10"
questionary = ">=1.10.0,<2.1.0"
prompt-toolkit = "^3.0.28,<3.0.29"
python-socketio = ">=5.8,<6"
python-engineio = ">=4.5.1,<6,!=5.0.0"
pydot = "~1.4"
SQLAlchemy = ">=2.0.22,<2.1.0"
sklearn-crfsuite = "~0.3.6"
psycopg2-binary = ">=2.9.9,<2.10.0"
python-dateutil = "~2.8.2"
protobuf = ">=4.23.3,< 4.25.4"
tensorflow_hub = "^0.13.0"
setuptools = "~70.0.0"
ujson = ">=5.8,<6.0"
regex = ">=2022.10.31,<2022.11"
sentry-sdk = ">=1.14.0,<1.15.0"
aio-pika = ">=8.2.3,<8.2.4"
aiogram = ">=2.15,<2.26"
typing-extensions = ">=4.7.1,<5.0.0"
typing-utils = "^0.1.0"
tarsafe = ">=0.0.5,<0.0.6"
google-auth = ">=2.23.4,<3"
CacheControl = "^0.12.14"
randomname = ">=0.2.1,<0.3.0"
pluggy = "^1.2.0"
slack-sdk = "^3.27.1"
confluent-kafka = ">=2.3.0,<3.0.0"
portalocker = "^2.7.0"
pypred = "^0.4.0"
structlog = ">=23.1.0,<23.2.0"
structlog-sentry = "^2.0.3"
langchain = "~0.2.0"
langchain-community = "~0.2.0"
jinja2 = "^3.1.4"
openai = "~1.54.0"
dnspython = "2.6.1"
wheel = ">=0.40.0"
certifi = ">=2024.07.04"
cryptography = ">=42.0.5"
jsonpatch = "^1.33"
importlib-resources = "6.1.3" # pinned to avoid breaking changes in versions >= 6.2.0 with Python 3.9
importlib-metadata = "~8.5.0"
opentelemetry-sdk = "~1.16.0"
opentelemetry-exporter-jaeger = "~1.16.0"
opentelemetry-exporter-otlp = "~1.16.0"
opentelemetry-api = "~1.16.0"
python-dotenv = "^1.0.1"
pep440-version-utils = "~1.1.0"
hvac = "^1.2.1"
rich = "^13.4.2"
cvg-python-sdk = "^0.5.1"
presidio-analyzer = "^2.2.33, <2.2.34"
presidio-anonymizer = "^2.2.354"
faker = "^26.0.0"
python-keycloak = "^3.12.0"
tiktoken = "~0.7.0"
faiss-cpu = "^1.7.4"
pycountry = "^22.3.5"
pymilvus = "<2.4.2" # pinned because 2.4.2 introduces milvus-lite dependency that fails on windows
qdrant-client = "^1.9.0"
psutil = "^5.9.5"
tenacity = "~8.4.1" # pinned down because of langchain
types-protobuf = "4.25.0.20240417"
litellm = "~1.52.6"
openpyxl = "^3.1.5"
diskcache = "~5.6.3"
skops = "~0.10.0"
safetensors = "~0.4.5"
[[tool.poetry.dependencies.tensorflow-io-gcs-filesystem]]
version = "==0.31" # newer versions doesn't provide wheels for Windows
markers = "sys_platform == 'win32'"

[[tool.poetry.dependencies.tensorflow-io-gcs-filesystem]]
version = "==0.34"
markers = "sys_platform == 'linux'"

[[tool.poetry.dependencies.tensorflow-io-gcs-filesystem]]
version = "==0.34"
markers = "sys_platform == 'darwin' and platform_machine != 'arm64'"

[[tool.poetry.dependencies.dask]]
version = "2022.10.2"
python = ">=3.9,<3.11"

[[tool.poetry.dependencies.numpy]]
version = ">=1.23.5,<1.25.0"
python = ">=3.9,<3.11"

[[tool.poetry.dependencies.scipy]]
version = ">=1.10.1,<1.11.0"
python = ">=3.9,<3.11"

[[tool.poetry.dependencies.scikit-learn]]
version = ">=1.1.3,<1.2"
python = ">=3.9,<3.11"

[[tool.poetry.dependencies.spacy]]
version = "^3.5.4"
optional = true

[[tool.poetry.dependencies.pydantic]]
version = "^2.0"
optional = true

[[tool.poetry.dependencies.mlflow]]
version = "^2.15.1"
optional = true

[[tool.poetry.dependencies.gitpython]]
version = "~3.1.41"
optional = true

[tool.poetry.extras]
spacy = [ "spacy",]
jieba = [ "jieba",]
transformers = [ "transformers", "sentencepiece",]
full = [ "spacy", "transformers", "sentencepiece", "jieba", "gitpython",]
gh-release-notes = [ "github3.py",]
metal = [ "tensorflow-metal",]
mlflow = [ "mlflow",]

[tool.poetry.scripts]
rasa = "rasa.__main__:main"

[tool.ruff.lint]
# The following checks are disabled because they are not relevant for Rasa
# - RUF001: Checks for ambiguous Unicode characters in strings. https://docs.astral.sh/ruff/rules/ambiguous-unicode-character-string/
# - RUF002: Checks for ambiguous Unicode characters in docstrings. https://docs.astral.sh/ruff/rules/ambiguous-unicode-character-docstring/
# - RUF003: Checks for ambiguous Unicode characters in comments. https://docs.astral.sh/ruff/rules/ambiguous-unicode-character-comment/
# - RUF005: Use of + operator for string concatenation https://docs.astral.sh/ruff/rules/collection-literal-concatenation/
# Following checks are currently disabled but will be enabled in the future
# as part of the ticket https://rasahq.atlassian.net/browse/ATO-866
# - D100: Missing docstring in public module
# - D101: Missing docstring in public class
# - D102: Missing docstring in public method
# - D103: Missing docstring in public function
# - D104: Missing docstring in public package
# - D105: Missing docstring in magic method
# - D107: Missing docstring in __init__
ignore = [ "D100", "D101", "D102", "D103", "D104", "D105", "D107", "RUF001", "RUF002", "RUF003", "RUF005",]
select = [ "D", "E", "F", "W", "RUF",]

[tool.pytest.ini_options]
python_functions = "test_"
filterwarnings = [ "ignore::ResourceWarning:ruamel[.*]", "ignore:.*Create unlinked descriptors is going to go away.*:DeprecationWarning", "ignore:.*the imp module.*:DeprecationWarning",]
log_cli_level = "WARNING"
log_cli = true
markers = [ "skip_on_windows", "skip_on_ci", "sequential", "category_cli", "category_core_featurizers", "category_policies", "category_nlu_featurizers", "category_nlu_predictors", "category_full_model_training", "category_other_unit_tests", "category_performance", "flaky",]
timeout = 60
timeout_func_only = true
asyncio_mode = "auto"

[tool.poetry.dependencies.rasa-sdk]
version = "~3.10.0"
allow-prereleases = true

[tool.poetry.dependencies.keras]
version = "2.14.0"

[tool.poetry.dependencies.tensorflow]
version = "2.14.1"
markers = "sys_platform != 'darwin' or platform_machine != 'arm64'"

[tool.poetry.dependencies.tensorflow-intel]
version = "2.14.1"
markers = "sys_platform == 'win32'"

[tool.poetry.dependencies.tensorflow-cpu-aws]
version = "2.14.1"
markers = "sys_platform == 'linux' and (platform_machine == 'arm64' or platform_machine == 'aarch64')"

[tool.poetry.dependencies.tensorflow-macos]
version = "2.14.1"
markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"

[tool.poetry.dependencies.PyJWT]
version = "^2.8.0"
extras = [ "crypto",]

[tool.poetry.dependencies.colorama]
version = "^0.4.6"
markers = "sys_platform == 'win32'"

[tool.poetry.dependencies.tensorflow-metal]
version = "1.1.0"
markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"
optional = true

[tool.poetry.dependencies.tensorflow-text]
version = "2.14.0"
markers = "sys_platform != 'win32' and platform_machine != 'arm64' and platform_machine != 'aarch64'"

[tool.poetry.dependencies."github3.py"]
version = "~3.2.0"
optional = true

[tool.poetry.dependencies.transformers]
version = "~4.36.2"
optional = true

[tool.poetry.dependencies.sentencepiece]
version = "~0.1.99"
optional = true
extras = [ "sentencepiece",]

[tool.poetry.dependencies.jieba]
version = ">=0.42.1, <0.43"
optional = true

[tool.poetry.dependencies.pymongo]
version = ">=4.6.3,<4.7"
extras = [ "tls", "srv",]

[tool.poetry.dev-dependencies.pytest-sanic]
git = "https://github.com/RasaHQ/pytest-sanic"
branch = "fix-variable-setting-on-sanic-instance-issue"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/test_telemetry.py" = [ "E501",]
"tests/shared/core/test_domain.py" = [ "E501",]

[tool.poetry.group.dev.dependencies]
ruff = ">=0.3.5,<0.4.0"
docker = "^6.0.1"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.20.0"
pytest-xdist = "^3.2.1"
pytest = "^7.1.3"
freezegun = "^1.5.1"
responses = ">=0.22,<0.25"
aioresponses = "^0.7.2"
moto = "~5.0.3"
fakeredis = "^2.23.2"
mongomock = "^4.1.2"
towncrier = "^22.8.0"
toml = "^0.10.0"
pytest-timeout = "^2.1.0"
mypy = "^1.0.0"
bandit = "^1.6.3"
types-pytz = "^2022.1.1"
types-python-dateutil = "^2.8.19"
types-requests = "^2.31.0"
types-setuptools = "^68.2.0"
memory-profiler = "^0.61.0"
mypy-extensions = ">=0.4.3,<1.1.0"
sanic-testing = "~23.6.0"
analytics-python = "^1.4.0"
datadog-api-client = "^2.25.0"
datadog = "^0.49.1"
types-redis = "^4.3.20"
types-protobuf = "^4.24.0"
types-toml = "^0.10.8.7"
